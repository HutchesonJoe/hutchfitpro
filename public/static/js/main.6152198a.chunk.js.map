{"version":3,"sources":["components/Banner.js","components/Errors.js","components/Login.js","components/Signup.js","components/EditForm.js","components/Exercise.js","components/Workout.js","components/WorkoutOptions.js","components/NewWorkout/SelectExercises.js","components/NewWorkout/NewWorkoutForm.js","components/ClientCard.js","components/AddClient.js","components/TrainerHome.js","components/Navbar.js","components/About.js","components/App.js","reportWebVitals.js","index.js"],"names":["Banner","className","Errors","errorList","errors","map","err","Login","onLogin","nextClientWorkoutOn","setNextClientWorkoutOn","useState","username","setUsername","password","setPassword","setErrors","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","placeholder","onChange","target","value","type","Signup","setSignUpFormOn","name","setName","certs","setCerts","userName","setUserName","passConf","setPassConf","email","setEmail","newUser","certifications","password_confirmation","EditForm","client","clients","setClients","editForm","setEditForm","setClientInfo","newEmail","age","newAge","setAge","feet","newFeet","setFeet","inches","newInches","setInches","weight","newWeight","setWeight","fitness_level","newLevel","setLevel","workouts_per_week","newWorkouts","setWorkouts","clientUpdate","clientIndex","findIndex","cl","id","filteredClients","filter","data","splice","Exercise","exercise","instructions","Workout","exerciseList","workout","fullWorkout","setFullWorkout","showWorkout","setShowWorkout","exercises","ex","completed","onClick","workout_id","w","workout_title","WorkoutOptions","setWorkoutOptionsOn","workoutOptionsOn","clientWorkouts","setClientWorkouts","setConfirm","workouts","nextWorkoutId","setNextWorkoutId","useEffect","workoutOptions","title","find","parseInt","nextWorkout","client_id","SelectExercises","newWorkoutExercises","setNewWorkoutExercises","setExercises","handleSelect","filteredExercises","htmlFor","category","NewWorkoutForm","setTitle","setWorkoutId","titleInputOn","setTitleInputOn","submitted","setSubmitted","formOn","setFormOn","selectExercisesOn","setSelectExercisesOn","navigate","useNavigate","exerciseIds","exercise_id","console","log","exercise_ids","ClientCard","clientCardOn","setClientCardOn","editFormOpen","setEditFormOpen","confirm","clientInfo","client_workouts","clientRecentWorkouts","slice","window","newClientList","c","to","AddClient","trainer","addClient","setAddClient","setAddClientButtonText","level","newClient","trainer_id","TrainerHome","clientList","setUser","thisClient","setThisClient","addClientButtonText","handleOpenClientCard","NavBar","About","App","signUpFormOn","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6152198a.chunk.js","sourcesContent":["\nfunction Banner(){\n  return (\n    <div>\n      <p className=\"header\">HutchFit PRO</p>\n    </div>\n  )\n}\n\nexport default Banner","function Errors({errors}){\n  \n  let errorList\n  \n  if(errors){\n    // console.log(errors)\n    errorList = errors.map( err => <li key={err}>{err}</li>)\n  } else {\n    errorList = \"\"\n  }\n  return(\n    <div className=\"errors\">\n      <ul>{errorList}</ul>\n    </div>\n    \n  )\n}\n\nexport default Errors","import { useState } from 'react';\nimport Errors from './Errors';\n\nfunction Login({onLogin, nextClientWorkoutOn, setNextClientWorkoutOn}){\n  const[username, setUsername] = useState(\"\");\n  const[password, setPassword] = useState(\"\");\n  const[errors, setErrors] = useState([]);\n  const[isClient, setIsClient] = useState(true)\n  const[clients, setClients] = useState([])\n  \n  function handleRadioSelect(){\n    setIsClient(!isClient)\n  }\n  \n  function handleClientSubmit(e){\n    e.preventDefault()\n    fetch(\"/clients\")\n      .then(r=>r.json())\n      .then(clients=>{\n        setClients(clients)\n        const thisClient = clients.find((client)=>username===client.username)\n        onLogin(thisClient)\n      if(thisClient){\n        if(thisClient.assigned_password===password){\n          setNextClientWorkoutOn(!nextClientWorkoutOn)\n        } else {\n          setErrors([\"Oops...that's not quite right.\"])\n          setPassword(\"\")\n        }\n      } else {\n        setErrors([\"Oops...that's not quite right.\"])\n      }\n      })\n    }\n  \n  \n  function handleTrainerSubmit(e){\n  \n    e.preventDefault()\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({username, password})\n    }).then((r)=> {\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors))\n      }\n    })\n  }\n\n  return(\n    <div className=\"login\">\n      <h3>Trainer Login</h3>\n     <form  onSubmit={handleTrainerSubmit}>\n      \n      <input placeholder=\"Username\" onChange={(e)=>setUsername(e.target.value)}></input>\n      <input placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)}></input>\n      <button type=\"submit\">submit</button>\n      <Errors errors = {errors}/>\n     </form>\n     \n    </div>\n  )\n}\n export default Login","import { useState } from 'react';\nimport Errors from './Errors';\n\nfunction Signup({setSignUpFormOn}){\n  const [name, setName] = useState(\"\")\n  const [certs, setCerts] = useState(\"\")\n  const [userName, setUserName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [passConf, setPassConf] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [errors, setErrors] = useState([])\n  \n  function handleSubmit(e){\n    e.preventDefault()\n    setSignUpFormOn(false)\n    const newUser = {\n      name, \n      certifications: certs,\n      username: userName,\n      email,\n      password, \n      password_confirmation: passConf\n    }\n    \n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(newUser)\n    }).then((r) => {\n      if (!r.ok) {\n        r.json().then((err) => setErrors(err.errors))\n      }\n    });\n  }\n\n  return(\n    <div className=\"signup\" >\n      <form onSubmit={handleSubmit}>\n        <label>New to HutchFit PRO?</label>\n        <div>\n        <input placeholder=\"Your First Name\" onChange={(e)=>setName(e.target.value)}></input>\n        <input placeholder=\"Certifications\" onChange={(e)=>setCerts(e.target.value)}></input>\n        <input placeholder=\"User Name\" onChange={(e)=>setUserName(e.target.value)}></input>\n        <input placeholder=\"Email Address\" onChange={(e)=>setEmail(e.target.value)}></input>\n        <input placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)}></input>\n        <input placeholder=\"Confirm Password\" onChange={(e)=>setPassConf(e.target.value)}></input>\n        </div>\n        <button type=\"Submit\">submit</button>\n      </form>\n      <Errors errors={errors}/>\n    </div>\n  )\n}\n\nexport default Signup","import { useState } from 'react';\nimport Errors from './Errors'\n\nfunction EditForm({client, clients, setClients, editForm, setEditForm, setClientInfo}){\n  \n  const[newEmail, setEmail] = useState(client.email)\n  const[newAge, setAge] = useState(client.age)\n  const[newFeet, setFeet] = useState(client.feet)\n  const[newInches, setInches] = useState(client.inches)\n  const[newWeight, setWeight] = useState(client.weight)\n  const[newLevel, setLevel] = useState(client.fitness_level)\n  const[newWorkouts, setWorkouts] = useState(client.workouts_per_week)\n  const[errors, setErrors] = useState([])\n  \n  function handleEdit(e){\n    e.preventDefault()\n    setEditForm(!editForm)\n    const clientUpdate = {\n      email: newEmail,\n      age: newAge,\n      feet: newFeet,\n      inches: newInches,\n      weight: newWeight,\n      fitness_level: newLevel,\n      workouts_per_week: newWorkouts\n    }\n\n    setClientInfo(clientUpdate)\n    \n    const clientIndex = clients.findIndex((cl) => cl.id===client.id)\n    const filteredClients = clients.filter((cl) => cl.id!==client.id)\n    fetch (`/clients/${client.id}/edit`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(clientUpdate)\n      }).then((r) => {\n        if (r.ok) {\n          r.json().then((data)=>{\n            filteredClients.splice(clientIndex, 0, data)\n            setClients(filteredClients)\n          })\n        } else {\n          r.json().then((err) => setErrors(err.errors))\n        }\n      })\n  }\n\n  return(\n    <div className=\"edit-form\">\n       \n      <form onSubmit={handleEdit}>\n        <input placeholder={client.email} onChange={(e)=>setEmail(e.target.value)}></input>\n        <input placeholder={client.age} onChange={(e)=>setAge(e.target.value)}></input>\n        <input placeholder={client.feet} onChange={(e)=>setFeet(e.target.value)}></input>\n        <input placeholder={client.inches} onChange={(e)=>setInches(e.target.value)}></input>\n        <input placeholder={client.weight} onChange={(e)=>setWeight(e.target.value)}></input>\n        <select onChange={(e)=>setLevel(e.target.value)}>\n         <option>Beginner</option>\n         <option>Intermediate</option>\n         <option>Advanced</option>\n       </select>\n       <label>How many workouts a week? (maximum 5)</label>\n       <select onChange={(e)=>setWorkouts(e.target.value)}>\n         <option>1</option>\n         <option>2</option>\n         <option>3</option>\n         <option>4</option>\n         <option>5</option>\n         <option>6</option>\n       </select>\n       <div>\n         <Errors errors={errors}/>\n       </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditForm","function Exercise({exercise}){\n  return(\n   \n    <div>\n      <p>3-4 sets of 10-12 reps</p>\n      <h4>{exercise.name}</h4>\n      <p>&emsp;{exercise.instructions}</p>\n    </div>\n  )\n}\n\nexport default Exercise","import { useState } from 'react';\nimport Exercise from './Exercise';\n\nfunction Workout({workout}){\n  const[fullWorkout, setFullWorkout] = useState()\n  const[showWorkout, setShowWorkout] = useState(false)\n  \n  function handleShowWorkout(){\n    setShowWorkout(!showWorkout)\n    fetch(`/workouts/${workout.workout_id}`)\n      .then(r=>r.json())\n      .then(w=>setFullWorkout(w))\n  }\n\n  let exerciseList\n\n  if(fullWorkout){\n    exerciseList = fullWorkout.exercises.map(ex=><Exercise exercise={ex} key={ex.id}/>)\n  }\n\n \n  return(\n    <div>\n      <li id={workout.completed ? \"workout-completed\" : \"workout-pending\"} className=\"workout-title\" onClick={handleShowWorkout}>{workout.workout_title}</li>\n      {showWorkout ? \n      <div>\n          {exerciseList}\n      </div>\n        : \"\" }\n    </div>\n  )\n}\n\nexport default Workout","import { Routes, Route, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Workout from './Workout'\n\nfunction WorkoutOptions({client, setWorkoutOptionsOn, workoutOptionsOn, clientWorkouts, setClientWorkouts, setConfirm}){\n  //this state needs to move up a component\n  const[workouts, setWorkouts] = useState([])\n  const[nextWorkoutId, setNextWorkoutId] = useState()\n  // const[nextWorkoutTitle, setNextWorkoutTitle] = useState()\n  // const[clientNextWorkout, setClientNextWorkout] = useState()\n  // const[showWorkoutOn, setShowWorkoutOn] = useState(false)\n\n  useEffect(()=>{\n    fetch(\"/workouts\")\n    .then(r=>r.json())\n    .then((w)=>{\n      setWorkouts(w);\n    })\n  },[])\n  \n  const workoutOptions = workouts.map((w)=><option id={w.id} key={w.id} value={w.id} >{w.title}</option>)\n\n  \n  function handleSubmit(e){\n    e.preventDefault()\n    setConfirm(true)\n\n    setWorkoutOptionsOn(!workoutOptionsOn)\n\n    fetch(`/workouts/${nextWorkoutId}`)\n      .then(r=>r.json())\n      // .then(w=>{\n      //   setNextWorkoutTitle(w.title)\n      //   setClientNextWorkout(w)\n      // })\n    \n    if(nextWorkoutId){\n      const workout = workouts.find((w)=>w.id===parseInt(nextWorkoutId))\n      const nextWorkout = {\n        client_id: client.id,\n        workout_id: workout.id,\n        workout_title: workout.title,\n        completed: false\n      }\n      \n      fetch(\"/client_workouts\",{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(nextWorkout)\n      })\n      .then(r=>r.json()).then((data)=>{\n\n        setClientWorkouts([...clientWorkouts, data])\n      })\n    }\n  }\n\n  return(\n    <div className=\"workout-options\">\n      <form onSubmit={handleSubmit}>\n        <select \n        onChange={(e)=>setNextWorkoutId(e.target.value)}>\n          <option>Select Workout</option>\n          {workoutOptions}\n        </select>\n        <button type=\"submit\">Next</button>\n      </form>\n    </div>\n  )\n}\n\nexport default WorkoutOptions","import CreateExerciseForm from '../CreateExerciseForm';\nimport { useEffect, useState } from 'react';\n\nfunction SelectExercises({newWorkoutExercises, setNewWorkoutExercises}){\n\n  const[exercises, setExercises] = useState([])\n  \n  \n  useEffect(()=>{\n    fetch(\"./exercises\").then(r=>r.json()).then((data)=>setExercises(data))\n  },[])\n  \n  function handleSelect(e){\n    let selectedExercise = newWorkoutExercises.find((id)=>id===e.target.id)\n    if(!selectedExercise){\n       setNewWorkoutExercises([...newWorkoutExercises, e.target.id])\n       \n    } else {\n      const filteredExercises = newWorkoutExercises.filter((exercise)=>exercise!==e.target.id)\n      setNewWorkoutExercises(filteredExercises)\n     \n      }    \n      \n  }\n\n  const exerciseList = exercises.map((ex)=>{\n    return (<div>\n      <input type=\"checkbox\" id={ex.id} name={ex.name} value={ex.instructions} key={ex.name} onChange={handleSelect}/>\n      <label htmlFor={ex.name} key={ex.id}>{ex.name}, <em>{ex.category}</em></label>\n    </div>\n    )\n  })\n  return(\n    <div>\n      <p>Select exercises:</p>\n        <div>{exerciseList}</div>\n    </div>\n    \n  )\n}\n\nexport default SelectExercises","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport Errors from '../Errors'\nimport SelectExercises from './SelectExercises';\n\nfunction NewWorkoutForm({}){\n  const[title, setTitle] = useState(\"\")\n  const[workoutId, setWorkoutId] = useState()\n  const[titleInputOn, setTitleInputOn] = useState(true)\n  const[submitted, setSubmitted] = useState(false)\n  const[formOn, setFormOn] = useState(false)\n  const[errors, setErrors] = useState([])\n  const[selectExercisesOn, setSelectExercisesOn] = useState(false) \n  const[newWorkoutExercises, setNewWorkoutExercises] = useState([])\n\n  function handleSubmitTitle(e){\n    e.preventDefault()\n    setTitleInputOn(!titleInputOn)\n    setSelectExercisesOn(!selectExercisesOn)\n      \n  }\n  \n  const navigate = useNavigate()\n\n  function handleSubmitExercises(e){\n    e.preventDefault()\n    setSubmitted(!submitted)\n    setSelectExercisesOn(!selectExercisesOn)\n\n    let exerciseIds = newWorkoutExercises.map((ex)=>{\n      return({exercise_id: parseInt(ex)})\n    })\n    console.log(exerciseIds)\n   \n    fetch(\"/workouts\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n      workout: {\n        title,\n        exercise_ids : exerciseIds\n      }\n    })\n    })\n      .then((r) => {\n        if(r.ok){\n          r.json().then((data)=>{\n            console.log(data)\n            setTitle(data.title)\n            setWorkoutId(data.id)\n          })\n//           .then(()=>{\n// //Why is \n//             newWorkoutExercises.map((ex)=>{\n//               console.log(workoutId)\n//               const exercise = { exercise_id: ex.id, workout_id: workoutId}\n//               console.log(exercise)\n//               fetch('/workout_exercises',{\n//                 method: \"POST\",\n//                 headers: {\n//                   \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(exercise)     \n//               })\n//               // don't need these\n//                 .then(r=>r.json())\n//                 .then(ex=>console.log(ex))\n//             })\n// ///\n//           })\n        } else {\n          r.json().then((err) => setErrors(err.errors))\n        }\n      })\n    ////Do I need a callback here like \"handle submit Exercises?\"\n    function handleSubmitEachExercise(){\n\n    }\n    \n  }\n \n  function handleNavigate(){\n    navigate(-1)\n  }\n\n  return(\n    <div>\n      <form onSubmit={handleSubmitTitle}>\n        <div>\n            {titleInputOn ? <input  id=\"workout-title-input\" placeholder=\"Title Workout, i.e. 'Upper Body/Core'\" onChange={(e)=>setTitle(e.target.value)}></input> : \"\"}\n        </div>\n        <div>\n          {selectExercisesOn ? \n            <div>\n              <p className=\"workout-title\">{title}</p>\n              <SelectExercises setFormOn={setFormOn} formOn={formOn} newWorkoutExercises={newWorkoutExercises} setNewWorkoutExercises={setNewWorkoutExercises}/>\n            </div>\n            : \"\"}\n        </div>\n       \n      \n        {titleInputOn ? <button type=\"submit\">Next</button> : <button onClick={submitted ? handleNavigate : handleSubmitExercises}>{submitted ? \"Back to Clients\": \"Submit Workout\"}</button>}\n        {submitted ? \"Your new workout has been submitted and can now be selected for your client's next workout.\" : \"\"}\n      </form>\n      <Errors errors={errors}/>\n    </div>\n  )\n}\n\nexport default NewWorkoutForm","import { useState, useEffect } from 'react';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport EditForm from './EditForm';\nimport WorkoutOptions from './WorkoutOptions';\nimport NewWorkoutForm from './NewWorkout/NewWorkoutForm';\nimport Workout from './Workout'\n\nfunction ClientCard({client, clients, setClients, clientCardOn, setClientCardOn}){\n  const[editFormOpen, setEditFormOpen] = useState(false)\n  const[workoutOptionsOn, setWorkoutOptionsOn] = useState(false)\n  // const[nextWorkout, setNextWorkout] = useState()\n  const[clientWorkouts, setClientWorkouts] = useState([])\n  const[confirm, setConfirm] = useState(false)\n  const[clientInfo, setClientInfo] = useState(client)\n\n  useEffect(()=>{\n      setClientWorkouts(clientInfo.client_workouts)\n  },[])\n   \n  function handleEdit(){\n    setEditFormOpen(!editFormOpen)\n  }\n  const lastThreeWorkouts = clientWorkouts.slice(-3)\n  const clientRecentWorkouts = lastThreeWorkouts.map((workout)=><Workout workout={workout} key={workout.id}/>)\n\n  function handleDelete(){\n    const deleteConfirm = window.confirm(\"Are you sure you want to delete this cleint? You CANNOT undo this action.\")\n\n    if (deleteConfirm){\n      setClientCardOn(!clientCardOn)\n      fetch(`/clients/${client.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      }).then(()=>{\n        const newClientList = clients.filter((c)=>c.id!==parseInt(client.id))\n        setClients(newClientList)\n      })\n    }\n  }\n  \n  return(\n    <div className=\"client-card\">\n      <h3>{clientInfo.name}</h3>\n      <p>Email: {clientInfo.email}</p>\n      <p>Stats: {clientInfo.age} years, {clientInfo.feet} ft. {clientInfo.inches} in., {clientInfo.weight} lbs</p>\n      <p>{clientInfo.fitness_level}, {clientInfo.workouts_per_week} workouts per week</p>\n      <button onClick={handleEdit}>{editFormOpen ? \"Close Edit Client\" : \"Edit Client\"}</button>\n      <button onClick={handleDelete}>Delete Client</button>\n      <div>{editFormOpen ? <EditForm client = {client} clients = {clients} setClients = {setClients} editForm={editFormOpen} setEditForm={setEditFormOpen} clientInfo={clientInfo} setClientInfo={setClientInfo}/> : \"\"}</div>\n      <div className=\"client-workouts\">\n        <p>Most recent workouts (in chronological order):</p>\n        <ul>\n          {clientRecentWorkouts}\n        </ul>\n      <div>\n      <button onClick={()=>setWorkoutOptionsOn(!workoutOptionsOn)}>Set your client's next workout:</button>\n        {workoutOptionsOn ?  <WorkoutOptions client={client} workoutOptionsOn={workoutOptionsOn} setWorkoutOptionsOn={setWorkoutOptionsOn} clientWorkouts={clientWorkouts} setClientWorkouts={setClientWorkouts} confirm={confirm} setConfirm={setConfirm}/> : \"\"}\n        </div>\n        <NavLink to=\"/newworkout\">OR create a new workout above.</NavLink>\n      </div>\n    </div>\n  )\n}\n\nexport default ClientCard","import { useState } from 'react';\nimport Errors from './Errors';\n\nfunction AddClient({clients, setClients, trainer, addClient, setAddClient, setAddClientButtonText}){\n  const[name, setName] = useState(\"\")\n  const[email, setEmail] = useState(\"\")\n  const[age, setAge] = useState()\n  const[feet, setFeet] = useState()\n  const[inches, setInches] = useState()\n  const[weight, setWeight] = useState()\n  const[level, setLevel] = useState(\"Beginner\")\n  const[workouts, setWorkouts] = useState()\n  const[errors, setErrors] = useState([])\n\n  function handleSubmit(e){\n    e.preventDefault()\n    setAddClient(!addClient)\n    setAddClientButtonText(false)\n    const newClient = {\n      name,\n      email,\n      age,\n      feet,\n      inches,\n      weight,\n      fitness_level: level,\n      workouts_per_week: workouts,\n      trainer_id: trainer.id\n    }\n    \n    fetch(\"/newclient\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newClient)\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((client) => setClients([...clients, client]))\n      } else {\n        r.json().then((err) => setErrors(err.errors))\n      }\n    });\n  }\n  \n\n  return(\n    <div className=\"add-client-form\">\n     <form onSubmit={handleSubmit}>\n       <input placeholder=\"Client Name\" onChange={(e)=>setName(e.target.value)}></input>\n       <input placeholder=\"Email\" onChange={(e)=>setEmail(e.target.value)}></input>\n       <input placeholder=\"Age\" onChange={(e)=>setAge(e.target.value)}></input>\n       <div>\n         <label>Height</label>\n       <input placeholder=\"Feet\" onChange={(e)=>setFeet(e.target.value)}></input>\n       <input placeholder=\"Inches\" onChange={(e)=>setInches(e.target.value)}></input>\n       </div>\n       <label>Weight</label>\n       <input placeholder=\"(in lbs)\" onChange={(e)=>setWeight(e.target.value)}></input>\n       <label>Select fitness level</label>\n       <select onChange={(e)=>setLevel(e.target.value)}>\n         <option>Beginner</option>\n         <option>Intermediate</option>\n         <option>Advanced</option>\n       </select>\n       <label>How many workouts a week? (maximum 5)</label>\n       <select onChange={(e)=>setWorkouts(e.target.value)}>\n         <option>1</option>\n         <option>2</option>\n         <option>3</option>\n         <option>4</option>\n         <option>5</option>\n         <option>6</option>\n       </select>\n       <Errors errors={errors}/>\n\n       <button type=\"submit\">Submit</button>\n     </form>\n    </div>\n  )\n}\n\nexport default AddClient","import { useState, useEffect } from 'react';\nimport ClientCard from './ClientCard';\nimport AddClient from './AddClient';\n\nfunction TrainerHome({user, setUser}){\n  const [thisClient, setThisClient] = useState()\n  const [clients, setClients] = useState([])\n  const [clientCardOn, setClientCardOn] = useState(false)\n  const [addClient, setAddClient] = useState(false)\n  const [addClientButtonText, setAddClientButtonText] = useState(false)\n\n  useEffect(()=>{\n    fetch(\"/myclients\").then(r=>r.json()).then(clients=>setClients(clients))\n  },[])\n\n  function handleOpenClientCard(e){\n    const client = clients.find((cl)=>cl.id===parseInt(e.target.id))\n    setThisClient(client)\n    setClientCardOn(!clientCardOn)\n  }\n  let clientList\n\n  if(clients){\n    clientList = clients.map((client)=>{\n      return(<div>\n        <h3 onClick={handleOpenClientCard} id={client.id} key={client.id} className=\"client-name\">{client.name}</h3>\n      </div>\n      )\n  })\n  }\n \n  function openAddClientForm(){\n    setAddClientButtonText(!addClientButtonText)\n    setAddClient(!addClient)\n  }\n\n  function handleLogOut(){\n    fetch(\"/logout\",{\n      method: 'DELETE'\n    }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  return(\n    \n    <div className='trainer-home'>\n      {clientCardOn ? <ClientCard client={thisClient} clients={clients} setClients={setClients} clientCardOn={clientCardOn} setClientCardOn={setClientCardOn}/> : \"\"}\n      <h2>Welcome, {user.name}!</h2>\n      <h3>Here's your current list of clients:</h3>\n      <div className='client-list'>\n        {clientList}\n      <button onClick={openAddClientForm}>{addClientButtonText ? \"Close\" : \"Add Client\"}</button>\n      </div>\n      \n      <div>{addClient ? <AddClient trainer={user} clients={clients} setClients={setClients} addClient={addClient} setAddClient={setAddClient} setAddClientButtonText={setAddClientButtonText}/> : \"\"}</div>\n      \n      <div id=\"logout-button\">\n        <button onClick={handleLogOut}>Log Out</button>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default TrainerHome","import { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction NavBar(){\n  return(\n    <div className=\"navbar\">\n      <NavLink to = \"/trainerhome\" className=\"navlink\">Trainer Home</NavLink>\n      <NavLink to = \"/about\" className=\"navlink\">About HutchFit PRO</NavLink>\n      <NavLink to = \"/newworkout\" className=\"navlink\">Create a New Workout</NavLink>\n    </div>\n  )\n}\n\nexport default NavBar;\n","function About(){\n  return(\n    <div id = \"about-page\">\n      HutchFit PRO is an application for Trainers to track their clients' workout programs. Trainers can \n      <ul>\n        <li>View their current roster.</li>\n        <li>View each client's statistics and recent assigned workouts.</li>\n        <li>Assign a client their next workout.</li>\n        <li>Create a new workout from the exercise repertoire.</li>\n\n      </ul>\n    </div>\n  )\n}\n\nexport default About;","\n// import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Banner from './Banner';\nimport Login from './Login';\nimport Signup from './Signup';\nimport { useEffect, useState } from 'react';\nimport TrainerHome from './TrainerHome';\nimport NavBar from './Navbar'\nimport NewWorkoutForm from './NewWorkout/NewWorkoutForm';\nimport About from './About';\nimport SelectExercises from './NewWorkout/SelectExercises';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [signUpFormOn, setSignUpFormOn] = useState(true)\n  const [nextClientWorkoutOn, setNextClientWorkoutOn] = useState(false)\n \n  useEffect(()=>{\n    fetch(\"/me\").then((r)=>{\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    })\n  },[])\n\n  let landingPage \n\n  if (!user){\n    landingPage = (\n      <div>\n    <Banner/>\n    <Login onLogin={setUser} user={user} nextClientWorkoutOn={nextClientWorkoutOn} setNextClientWorkoutOn={setNextClientWorkoutOn}/>\n    {signUpFormOn ? <Signup setUser={setUser} setSignUpFormOn={setSignUpFormOn}/> : \"\"}\n  </div>\n    )\n  } else {\n    landingPage = (\n      <div className=\"start-page\">\n        <Banner/>\n        <NavBar/>\n        <Routes>\n          <Route exact path=\"/newworkout\" element={<NewWorkoutForm user={user}/>}/>\n          <Route exact path=\"/newworkout/selectexercises\" element={<SelectExercises/>}/>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/trainerhome\" element={<TrainerHome user={user} setUser={setUser}/>}/>\n          <Route exact path=\"/\" element={<TrainerHome user={user} setUser={setUser}/>}/>\n        </Routes>\n      </div>\n    )\n  }\n\n  return (\n      landingPage\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router}  from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}